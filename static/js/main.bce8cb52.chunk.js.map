{"version":3,"sources":["components/Home.js","components/lectures/Lecture1.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","Lecture1","formik","useFormik","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","handleSubmit","htmlFor","type","id","onChange","handleChange","onBlur","handleBlur","value","touched","className","MainComponent","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGe,SAASA,IACtB,OACE,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,aAAT,iD,kBCJK,SAASC,IACtB,IA6BMC,EAASC,YAAU,CACvBC,cA9BoB,CACpBC,KAAM,GACNC,MAAO,GACPC,QAAS,IA4BTC,SA1Be,SAACC,GAChBC,QAAQC,IAAI,gBAAiBF,IA0B7BG,SAxBe,SAACH,GAEhB,IAAMI,EAAS,GAiBf,OAhBKJ,EAAOJ,OACVQ,EAAOR,KAAO,0BAEXI,EAAOH,MAGT,uEAAuEQ,KACtEL,EAAOH,SAGTO,EAAOP,MAAQ,kBANfO,EAAOP,MAAQ,0BAQZG,EAAOF,UACVM,EAAON,QAAU,6BAGZM,KAST,OACE,gCACE,8CACA,uBAAML,SAAUN,EAAOa,aAAvB,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLZ,KAAK,OACLa,GAAG,OACHC,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOO,OAAOJ,OAEtBH,EAAOsB,QAAQnB,MAAQH,EAAOW,OAAOR,MACpC,mBAAGoB,UAAU,cAAb,SAA4BvB,EAAOW,OAAOR,OAE5C,uBAAOW,QAAQ,QAAf,oBACA,uBACEC,KAAK,QACLZ,KAAK,QACLa,GAAG,QACHC,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOO,OAAOH,QAEtBJ,EAAOsB,QAAQlB,OAASJ,EAAOW,OAAOP,OACrC,mBAAGmB,UAAU,cAAb,SAA4BvB,EAAOW,OAAOP,QAE5C,uBAAOU,QAAQ,UAAf,qBACA,uBACEC,KAAK,OACLZ,KAAK,UACLa,GAAG,UACHC,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOO,OAAOF,UAEtBL,EAAOsB,QAAQjB,SAAWL,EAAOW,OAAON,SACvC,mBAAGkB,UAAU,cAAb,SAA4BvB,EAAOW,OAAON,UAE5C,wBAAQU,KAAK,SAAb,0BC5EO,SAASS,IACtB,OACE,gCACE,0DACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,aAAaC,UAAW5B,IAC1C,cAAC,IAAD,CAAUD,GAAG,YCCN8B,MAVf,WACE,OACE,cAAC,IAAD,UACE,8BACE,cAACJ,EAAD,SCKOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bce8cb52.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/lecture-1\">1. Simple Form (Youtube From)</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./lecture1.css\";\nimport { useFormik } from \"formik\";\n\nexport default function Lecture1() {\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    channel: \"\",\n  };\n  const onSubmit = (values) => {\n    console.log(\"Form State is\", values);\n  };\n  const validate = (values) => {\n    //expects erros object if contains any fields should be errors.name, errrors.email, error.channel\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Name field is required\";\n    }\n    if (!values.email) {\n      errors.email = \"Email field is required\";\n    } else if (\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        values.email\n      )\n    ) {\n      errors.email = \"Invalid Email \";\n    }\n    if (!values.channel) {\n      errors.channel = \"Channel field is required\";\n    }\n\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate,\n  });\n\n  //   console.log(\"FORM VALUES\", formik.values);\n  return (\n    <div>\n      <h2>YouTube Form</h2>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        />\n        {formik.touched.name && formik.errors.name && (\n          <p className=\"text-danger\">{formik.errors.name}</p>\n        )}\n        <label htmlFor=\"email\">E-mail</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email && (\n          <p className=\"text-danger\">{formik.errors.email}</p>\n        )}\n        <label htmlFor=\"channel\">Channel</label>\n        <input\n          type=\"text\"\n          name=\"channel\"\n          id=\"channel\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.channel}\n        />\n        {formik.touched.channel && formik.errors.channel && (\n          <p className=\"text-danger\">{formik.errors.channel}</p>\n        )}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Lecture1 from \"./lectures/Lecture1\";\n\nexport default function MainComponent() {\n  return (\n    <div>\n      <h1>React Formik Play-ground</h1>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/lecture-1\" component={Lecture1} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n","import MainComponent from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <MainComponent />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}